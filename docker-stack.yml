version: '3.8'

services:

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8888:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - elk 
    deploy:
      placement:
        constraints: [node.role == manager]

  loadbalancer:
    image: nginx
    ports:
      - '80:80'
      - 9200:9200
      - 5601:5601
      - 8881:8881
      - 8882:8882
    volumes:
      - /loadbalancer:/etc/nginx/conf.d
      - /proxy/.htpasswd:/etc/nginx/.htpasswd
    networks:
      - elk 
    deploy:
      replicas: 2
      placement:
          constraints: [node.labels.elastic != true ]
          max_replicas_per_node: 1    

  minitwitimage:
    image: bjarkedc/minitwitimage
    ports:
      - '8080:8080'
    networks:
      - elk 
    deploy:
      replicas: 2
      placement:
          constraints: [node.labels.elastic != true ]
          max_replicas_per_node: 1    

  db:
    container_name: minitwit_db
    image: postgres:14.1-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - elk 
    deploy:
      replicas: 1
      placement:
          constraints: [node.labels.elastic != true ]    
  
  # Logging
  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.6.2"
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
    volumes:
      - elk_elasticsearch_data:/usr/share/elasticsearch/data 
    networks:
      - elk 
    deploy:
      replicas: 1
      placement:
          constraints: [node.labels.elastic == true ]

  kibana:
    image: "docker.elastic.co/kibana/kibana:8.6.2"
    environment:
      - "elasticsearch.hosts='[\"http://elasticsearch:9200\"]'"
      - "xpack.security.enabled=false"
    networks:
      - elk
    volumes:
      - kibanadata:/usr/share/kibana/data
    deploy:
      replicas: 1
      placement:
          constraints: [node.labels.elastic == true]

  redis:
    container_name: minitwit_redis
    image: redis:6.0-rc1
    restart: always
    ports:
      - "6379:6379"
    networks:
      - elk
    volumes:
      - redis_data:/data
    deploy:
      replicas: 1
      placement:
          constraints: [node.labels.elastic != true]      

networks:
  elk:
    driver: overlay

volumes:
  db:
    driver: local
  elk_elasticsearch_data:
    driver: local
  kibanadata:
    driver: local
  redis_data:
    driver: local
